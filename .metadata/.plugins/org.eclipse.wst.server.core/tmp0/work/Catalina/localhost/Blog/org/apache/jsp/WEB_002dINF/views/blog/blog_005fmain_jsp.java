/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.43
 * Generated at: 2020-02-03 01:51:48 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.blog;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class blog_005fmain_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/D:/Mywork/blog/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Blog/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1574302982112L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>blogggg :)</title>\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css?family=Cute+Font&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("<link rel=\"shortcut icon\" href=\"../../images/cloudicon.png\">\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"resources/css/blog_css/main.css\" />\r\n");
      out.write("<script type=\"text/javascript\"src=\"resources/script/jquery/jquery-1.12.4.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("$(document).ready(function(){\r\n");
      out.write("\t$(\"#backBtn\").on(\"click\",function(){\r\n");
      out.write("\t\thistory.back();\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t$(\"#joinBtn\").on(\"click\",function(){\r\n");
      out.write("\t\tlocation.href=\"blog_join\";\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t$(\"#mainBtn\").on(\"click\",function(){\r\n");
      out.write("\t\tlocation.href=\"blog_main\";\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t$(\"#loginBtn\").on(\"click\", function(){\r\n");
      out.write("\t\tif($.trim($(\"#Bid\").val()) == \"\"){ //공백을제거한 id의 값이 공백일때\r\n");
      out.write("\t\t\talert(\"아이디를 입력하세요.\");\r\n");
      out.write("\t\t\t$(\"#Bid\").focus();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\telse if($.trim($(\"#Bpw\").val()) == \"\"){\r\n");
      out.write("\t\t\talert(\"비밀번호를 입력하세요.\");\r\n");
      out.write("\t\t\t$(\"#Bpw\").focus();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\telse {\r\n");
      out.write("\t\t\tvar params = $(\"#actionForm\").serialize();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\ttype : \"post\", //데이터 전송방식\r\n");
      out.write("\t\t\t\turl : \"bLoginAjax\", //주소\r\n");
      out.write("\t\t\t\tdataType : \"json\", //데이터 전송 규격\r\n");
      out.write("\t\t\t\tdata : params, //보낼 데이터\r\n");
      out.write("\t\t\t\t//{키:값 , 키:값 , ...} -->json\r\n");
      out.write("\t\t\t\tsuccess : function(result){\r\n");
      out.write("\t\t\t\t\tif(result.res == \"SUCCESS\"){\r\n");
      out.write("\t\t\t\t\t\tif(document.referrer == \"http://localhost:8090/Blog/blog_list1\"){\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\tlocation.href=\"blog_list1\";\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\telse{\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\tlocation.href=\"blog_list\";\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t/* alert(document.referrer); */\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\telse{\r\n");
      out.write("\t\t\t\t\t\talert(\"로그인에 실패하였습니다.\");\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\terror : function(request,status, error){\r\n");
      out.write("\t\t\t\tconsole.log(\"status : \" + request.status);\r\n");
      out.write("\t\t\t\tconsole.log(\"text : \" + request.responseText);\r\n");
      out.write("\t\t\t\tconsole.log(\"error : \" + error);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<!-- 상단 -->\r\n");
      out.write("<div class=\"main_header\">\r\n");
      out.write("\t<div class=\"header_top\">\r\n");
      out.write("\t\t<div id=\"joinBtn\">회원가입</div>\r\n");
      out.write("\t\t<div id=\"mainBtn\">로그인</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div class=\"header_bottom\">JaeHyeong's Bloggggg :)</div>\r\n");
      out.write("</div>\r\n");
      out.write("<!-- 중간 -->\r\n");
      out.write("<div class=\"main_content\">\r\n");
      out.write("\t<div class=\"main_blank\">\r\n");
      out.write("\t\t<div class=\"name_blank\"></div>\r\n");
      out.write("\t\t<div class=\"blog_name\"></div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div class=\"main_login\">\r\n");
      out.write("\t\t<div class=\"login_blank\"></div>\r\n");
      out.write("\t\t<div class=\"login_area\">\r\n");
      out.write("\t\t<div class=\"login_title\">로그인</div>\r\n");
      out.write("\t\t<form action=\"#\" id=\"actionForm\" method=\"post\">\r\n");
      out.write("\t\t\t<input type=\"text\" class=\"id_txt\" name=\"id\" id=\"Bid\" placeholder = \"아이디를 입력하세요\"/> <br/>\r\n");
      out.write("\t\t\t<input type=\"password\" class=\"pw_txt\" name=\"pw\" id=\"Bpw\" placeholder = \"비밀번호를 입력하세요\"/> <br/> <br/>\r\n");
      out.write("\t\t\t<div class=\"login\" id=\"loginBtn\">로그인</div>\r\n");
      out.write("\t\t\t<div class=\"join\" id=\"backBtn\">이전</div>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("</div>\r\n");
      out.write("<!-- 하단 -->\r\n");
      out.write("<div class=\"main_footer\"></div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
